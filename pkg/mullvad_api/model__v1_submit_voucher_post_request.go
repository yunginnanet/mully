/*
Mullvad App API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mullvad_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1SubmitVoucherPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SubmitVoucherPostRequest{}

// V1SubmitVoucherPostRequest struct for V1SubmitVoucherPostRequest
type V1SubmitVoucherPostRequest struct {
	VoucherCode string `json:"voucher_code"`
}

type _V1SubmitVoucherPostRequest V1SubmitVoucherPostRequest

// NewV1SubmitVoucherPostRequest instantiates a new V1SubmitVoucherPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SubmitVoucherPostRequest(voucherCode string) *V1SubmitVoucherPostRequest {
	this := V1SubmitVoucherPostRequest{}
	this.VoucherCode = voucherCode
	return &this
}

// NewV1SubmitVoucherPostRequestWithDefaults instantiates a new V1SubmitVoucherPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SubmitVoucherPostRequestWithDefaults() *V1SubmitVoucherPostRequest {
	this := V1SubmitVoucherPostRequest{}
	return &this
}

// GetVoucherCode returns the VoucherCode field value
func (o *V1SubmitVoucherPostRequest) GetVoucherCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VoucherCode
}

// GetVoucherCodeOk returns a tuple with the VoucherCode field value
// and a boolean to check if the value has been set.
func (o *V1SubmitVoucherPostRequest) GetVoucherCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VoucherCode, true
}

// SetVoucherCode sets field value
func (o *V1SubmitVoucherPostRequest) SetVoucherCode(v string) {
	o.VoucherCode = v
}

func (o V1SubmitVoucherPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SubmitVoucherPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["voucher_code"] = o.VoucherCode
	return toSerialize, nil
}

func (o *V1SubmitVoucherPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"voucher_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1SubmitVoucherPostRequest := _V1SubmitVoucherPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1SubmitVoucherPostRequest)

	if err != nil {
		return err
	}

	*o = V1SubmitVoucherPostRequest(varV1SubmitVoucherPostRequest)

	return err
}

type NullableV1SubmitVoucherPostRequest struct {
	value *V1SubmitVoucherPostRequest
	isSet bool
}

func (v NullableV1SubmitVoucherPostRequest) Get() *V1SubmitVoucherPostRequest {
	return v.value
}

func (v *NullableV1SubmitVoucherPostRequest) Set(val *V1SubmitVoucherPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SubmitVoucherPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SubmitVoucherPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SubmitVoucherPostRequest(val *V1SubmitVoucherPostRequest) *NullableV1SubmitVoucherPostRequest {
	return &NullableV1SubmitVoucherPostRequest{value: val, isSet: true}
}

func (v NullableV1SubmitVoucherPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SubmitVoucherPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


