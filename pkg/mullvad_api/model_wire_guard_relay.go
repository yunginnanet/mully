/*
Mullvad App API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mullvad_api

import (
	"encoding/json"
)

// checks if the WireGuardRelay type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WireGuardRelay{}

// WireGuardRelay struct for WireGuardRelay
type WireGuardRelay struct {
	Hostname *string `json:"hostname,omitempty"`
	Location *string `json:"location,omitempty"`
	Active *bool `json:"active,omitempty"`
	Owned *bool `json:"owned,omitempty"`
	Provider *string `json:"provider,omitempty"`
	Ipv4AddrIn *string `json:"ipv4_addr_in,omitempty"`
	IncludeInCountry *bool `json:"include_in_country,omitempty"`
	Weight *int32 `json:"weight,omitempty"`
	PublicKey *string `json:"public_key,omitempty"`
	Ipv6AddrIn *string `json:"ipv6_addr_in,omitempty"`
	// Whether the server supports clients using the same IP address. This flag will be removed once all servers support the feature, so clients should default to True if it's missing. 
	SameIp *bool `json:"same_ip,omitempty"`
	// If true, clients can expect DAITA to be available on this relay. Note that this field is not guaranteed to be present. A missing `daita` property is semantically equivalent to `\"daita\": false`. 
	Daita *bool `json:"daita,omitempty"`
}

// NewWireGuardRelay instantiates a new WireGuardRelay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWireGuardRelay() *WireGuardRelay {
	this := WireGuardRelay{}
	var sameIp bool = true
	this.SameIp = &sameIp
	var daita bool = false
	this.Daita = &daita
	return &this
}

// NewWireGuardRelayWithDefaults instantiates a new WireGuardRelay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWireGuardRelayWithDefaults() *WireGuardRelay {
	this := WireGuardRelay{}
	var sameIp bool = true
	this.SameIp = &sameIp
	var daita bool = false
	this.Daita = &daita
	return &this
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *WireGuardRelay) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *WireGuardRelay) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *WireGuardRelay) SetHostname(v string) {
	o.Hostname = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *WireGuardRelay) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *WireGuardRelay) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *WireGuardRelay) SetLocation(v string) {
	o.Location = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *WireGuardRelay) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *WireGuardRelay) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *WireGuardRelay) SetActive(v bool) {
	o.Active = &v
}

// GetOwned returns the Owned field value if set, zero value otherwise.
func (o *WireGuardRelay) GetOwned() bool {
	if o == nil || IsNil(o.Owned) {
		var ret bool
		return ret
	}
	return *o.Owned
}

// GetOwnedOk returns a tuple with the Owned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetOwnedOk() (*bool, bool) {
	if o == nil || IsNil(o.Owned) {
		return nil, false
	}
	return o.Owned, true
}

// HasOwned returns a boolean if a field has been set.
func (o *WireGuardRelay) HasOwned() bool {
	if o != nil && !IsNil(o.Owned) {
		return true
	}

	return false
}

// SetOwned gets a reference to the given bool and assigns it to the Owned field.
func (o *WireGuardRelay) SetOwned(v bool) {
	o.Owned = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *WireGuardRelay) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *WireGuardRelay) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *WireGuardRelay) SetProvider(v string) {
	o.Provider = &v
}

// GetIpv4AddrIn returns the Ipv4AddrIn field value if set, zero value otherwise.
func (o *WireGuardRelay) GetIpv4AddrIn() string {
	if o == nil || IsNil(o.Ipv4AddrIn) {
		var ret string
		return ret
	}
	return *o.Ipv4AddrIn
}

// GetIpv4AddrInOk returns a tuple with the Ipv4AddrIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetIpv4AddrInOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv4AddrIn) {
		return nil, false
	}
	return o.Ipv4AddrIn, true
}

// HasIpv4AddrIn returns a boolean if a field has been set.
func (o *WireGuardRelay) HasIpv4AddrIn() bool {
	if o != nil && !IsNil(o.Ipv4AddrIn) {
		return true
	}

	return false
}

// SetIpv4AddrIn gets a reference to the given string and assigns it to the Ipv4AddrIn field.
func (o *WireGuardRelay) SetIpv4AddrIn(v string) {
	o.Ipv4AddrIn = &v
}

// GetIncludeInCountry returns the IncludeInCountry field value if set, zero value otherwise.
func (o *WireGuardRelay) GetIncludeInCountry() bool {
	if o == nil || IsNil(o.IncludeInCountry) {
		var ret bool
		return ret
	}
	return *o.IncludeInCountry
}

// GetIncludeInCountryOk returns a tuple with the IncludeInCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetIncludeInCountryOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeInCountry) {
		return nil, false
	}
	return o.IncludeInCountry, true
}

// HasIncludeInCountry returns a boolean if a field has been set.
func (o *WireGuardRelay) HasIncludeInCountry() bool {
	if o != nil && !IsNil(o.IncludeInCountry) {
		return true
	}

	return false
}

// SetIncludeInCountry gets a reference to the given bool and assigns it to the IncludeInCountry field.
func (o *WireGuardRelay) SetIncludeInCountry(v bool) {
	o.IncludeInCountry = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *WireGuardRelay) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *WireGuardRelay) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *WireGuardRelay) SetWeight(v int32) {
	o.Weight = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *WireGuardRelay) GetPublicKey() string {
	if o == nil || IsNil(o.PublicKey) {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetPublicKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PublicKey) {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *WireGuardRelay) HasPublicKey() bool {
	if o != nil && !IsNil(o.PublicKey) {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *WireGuardRelay) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetIpv6AddrIn returns the Ipv6AddrIn field value if set, zero value otherwise.
func (o *WireGuardRelay) GetIpv6AddrIn() string {
	if o == nil || IsNil(o.Ipv6AddrIn) {
		var ret string
		return ret
	}
	return *o.Ipv6AddrIn
}

// GetIpv6AddrInOk returns a tuple with the Ipv6AddrIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetIpv6AddrInOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv6AddrIn) {
		return nil, false
	}
	return o.Ipv6AddrIn, true
}

// HasIpv6AddrIn returns a boolean if a field has been set.
func (o *WireGuardRelay) HasIpv6AddrIn() bool {
	if o != nil && !IsNil(o.Ipv6AddrIn) {
		return true
	}

	return false
}

// SetIpv6AddrIn gets a reference to the given string and assigns it to the Ipv6AddrIn field.
func (o *WireGuardRelay) SetIpv6AddrIn(v string) {
	o.Ipv6AddrIn = &v
}

// GetSameIp returns the SameIp field value if set, zero value otherwise.
func (o *WireGuardRelay) GetSameIp() bool {
	if o == nil || IsNil(o.SameIp) {
		var ret bool
		return ret
	}
	return *o.SameIp
}

// GetSameIpOk returns a tuple with the SameIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetSameIpOk() (*bool, bool) {
	if o == nil || IsNil(o.SameIp) {
		return nil, false
	}
	return o.SameIp, true
}

// HasSameIp returns a boolean if a field has been set.
func (o *WireGuardRelay) HasSameIp() bool {
	if o != nil && !IsNil(o.SameIp) {
		return true
	}

	return false
}

// SetSameIp gets a reference to the given bool and assigns it to the SameIp field.
func (o *WireGuardRelay) SetSameIp(v bool) {
	o.SameIp = &v
}

// GetDaita returns the Daita field value if set, zero value otherwise.
func (o *WireGuardRelay) GetDaita() bool {
	if o == nil || IsNil(o.Daita) {
		var ret bool
		return ret
	}
	return *o.Daita
}

// GetDaitaOk returns a tuple with the Daita field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireGuardRelay) GetDaitaOk() (*bool, bool) {
	if o == nil || IsNil(o.Daita) {
		return nil, false
	}
	return o.Daita, true
}

// HasDaita returns a boolean if a field has been set.
func (o *WireGuardRelay) HasDaita() bool {
	if o != nil && !IsNil(o.Daita) {
		return true
	}

	return false
}

// SetDaita gets a reference to the given bool and assigns it to the Daita field.
func (o *WireGuardRelay) SetDaita(v bool) {
	o.Daita = &v
}

func (o WireGuardRelay) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WireGuardRelay) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Owned) {
		toSerialize["owned"] = o.Owned
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.Ipv4AddrIn) {
		toSerialize["ipv4_addr_in"] = o.Ipv4AddrIn
	}
	if !IsNil(o.IncludeInCountry) {
		toSerialize["include_in_country"] = o.IncludeInCountry
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.PublicKey) {
		toSerialize["public_key"] = o.PublicKey
	}
	if !IsNil(o.Ipv6AddrIn) {
		toSerialize["ipv6_addr_in"] = o.Ipv6AddrIn
	}
	if !IsNil(o.SameIp) {
		toSerialize["same_ip"] = o.SameIp
	}
	if !IsNil(o.Daita) {
		toSerialize["daita"] = o.Daita
	}
	return toSerialize, nil
}

type NullableWireGuardRelay struct {
	value *WireGuardRelay
	isSet bool
}

func (v NullableWireGuardRelay) Get() *WireGuardRelay {
	return v.value
}

func (v *NullableWireGuardRelay) Set(val *WireGuardRelay) {
	v.value = val
	v.isSet = true
}

func (v NullableWireGuardRelay) IsSet() bool {
	return v.isSet
}

func (v *NullableWireGuardRelay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWireGuardRelay(val *WireGuardRelay) *NullableWireGuardRelay {
	return &NullableWireGuardRelay{value: val, isSet: true}
}

func (v NullableWireGuardRelay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWireGuardRelay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


