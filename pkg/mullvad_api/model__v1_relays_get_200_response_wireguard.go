/*
Mullvad App API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mullvad_api

import (
	"encoding/json"
)

// checks if the V1RelaysGet200ResponseWireguard type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1RelaysGet200ResponseWireguard{}

// V1RelaysGet200ResponseWireguard struct for V1RelaysGet200ResponseWireguard
type V1RelaysGet200ResponseWireguard struct {
	// List of port ranges that will accept connections
	PortRanges [][]int32 `json:"port_ranges,omitempty"`
	// The ipv4 gateway of the server, you can ping it to check whether a tunnel is connected or not.
	Ipv4Gateway *string `json:"ipv4_gateway,omitempty"`
	// The ipv6 gateway of the server, you can ping it to check whether a tunnel is connected or not.
	Ipv6Gateway *string `json:"ipv6_gateway,omitempty"`
	Relays []WireGuardRelay `json:"relays,omitempty"`
}

// NewV1RelaysGet200ResponseWireguard instantiates a new V1RelaysGet200ResponseWireguard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1RelaysGet200ResponseWireguard() *V1RelaysGet200ResponseWireguard {
	this := V1RelaysGet200ResponseWireguard{}
	return &this
}

// NewV1RelaysGet200ResponseWireguardWithDefaults instantiates a new V1RelaysGet200ResponseWireguard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1RelaysGet200ResponseWireguardWithDefaults() *V1RelaysGet200ResponseWireguard {
	this := V1RelaysGet200ResponseWireguard{}
	return &this
}

// GetPortRanges returns the PortRanges field value if set, zero value otherwise.
func (o *V1RelaysGet200ResponseWireguard) GetPortRanges() [][]int32 {
	if o == nil || IsNil(o.PortRanges) {
		var ret [][]int32
		return ret
	}
	return o.PortRanges
}

// GetPortRangesOk returns a tuple with the PortRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RelaysGet200ResponseWireguard) GetPortRangesOk() ([][]int32, bool) {
	if o == nil || IsNil(o.PortRanges) {
		return nil, false
	}
	return o.PortRanges, true
}

// HasPortRanges returns a boolean if a field has been set.
func (o *V1RelaysGet200ResponseWireguard) HasPortRanges() bool {
	if o != nil && !IsNil(o.PortRanges) {
		return true
	}

	return false
}

// SetPortRanges gets a reference to the given [][]int32 and assigns it to the PortRanges field.
func (o *V1RelaysGet200ResponseWireguard) SetPortRanges(v [][]int32) {
	o.PortRanges = v
}

// GetIpv4Gateway returns the Ipv4Gateway field value if set, zero value otherwise.
func (o *V1RelaysGet200ResponseWireguard) GetIpv4Gateway() string {
	if o == nil || IsNil(o.Ipv4Gateway) {
		var ret string
		return ret
	}
	return *o.Ipv4Gateway
}

// GetIpv4GatewayOk returns a tuple with the Ipv4Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RelaysGet200ResponseWireguard) GetIpv4GatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv4Gateway) {
		return nil, false
	}
	return o.Ipv4Gateway, true
}

// HasIpv4Gateway returns a boolean if a field has been set.
func (o *V1RelaysGet200ResponseWireguard) HasIpv4Gateway() bool {
	if o != nil && !IsNil(o.Ipv4Gateway) {
		return true
	}

	return false
}

// SetIpv4Gateway gets a reference to the given string and assigns it to the Ipv4Gateway field.
func (o *V1RelaysGet200ResponseWireguard) SetIpv4Gateway(v string) {
	o.Ipv4Gateway = &v
}

// GetIpv6Gateway returns the Ipv6Gateway field value if set, zero value otherwise.
func (o *V1RelaysGet200ResponseWireguard) GetIpv6Gateway() string {
	if o == nil || IsNil(o.Ipv6Gateway) {
		var ret string
		return ret
	}
	return *o.Ipv6Gateway
}

// GetIpv6GatewayOk returns a tuple with the Ipv6Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RelaysGet200ResponseWireguard) GetIpv6GatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv6Gateway) {
		return nil, false
	}
	return o.Ipv6Gateway, true
}

// HasIpv6Gateway returns a boolean if a field has been set.
func (o *V1RelaysGet200ResponseWireguard) HasIpv6Gateway() bool {
	if o != nil && !IsNil(o.Ipv6Gateway) {
		return true
	}

	return false
}

// SetIpv6Gateway gets a reference to the given string and assigns it to the Ipv6Gateway field.
func (o *V1RelaysGet200ResponseWireguard) SetIpv6Gateway(v string) {
	o.Ipv6Gateway = &v
}

// GetRelays returns the Relays field value if set, zero value otherwise.
func (o *V1RelaysGet200ResponseWireguard) GetRelays() []WireGuardRelay {
	if o == nil || IsNil(o.Relays) {
		var ret []WireGuardRelay
		return ret
	}
	return o.Relays
}

// GetRelaysOk returns a tuple with the Relays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RelaysGet200ResponseWireguard) GetRelaysOk() ([]WireGuardRelay, bool) {
	if o == nil || IsNil(o.Relays) {
		return nil, false
	}
	return o.Relays, true
}

// HasRelays returns a boolean if a field has been set.
func (o *V1RelaysGet200ResponseWireguard) HasRelays() bool {
	if o != nil && !IsNil(o.Relays) {
		return true
	}

	return false
}

// SetRelays gets a reference to the given []WireGuardRelay and assigns it to the Relays field.
func (o *V1RelaysGet200ResponseWireguard) SetRelays(v []WireGuardRelay) {
	o.Relays = v
}

func (o V1RelaysGet200ResponseWireguard) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1RelaysGet200ResponseWireguard) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PortRanges) {
		toSerialize["port_ranges"] = o.PortRanges
	}
	if !IsNil(o.Ipv4Gateway) {
		toSerialize["ipv4_gateway"] = o.Ipv4Gateway
	}
	if !IsNil(o.Ipv6Gateway) {
		toSerialize["ipv6_gateway"] = o.Ipv6Gateway
	}
	if !IsNil(o.Relays) {
		toSerialize["relays"] = o.Relays
	}
	return toSerialize, nil
}

type NullableV1RelaysGet200ResponseWireguard struct {
	value *V1RelaysGet200ResponseWireguard
	isSet bool
}

func (v NullableV1RelaysGet200ResponseWireguard) Get() *V1RelaysGet200ResponseWireguard {
	return v.value
}

func (v *NullableV1RelaysGet200ResponseWireguard) Set(val *V1RelaysGet200ResponseWireguard) {
	v.value = val
	v.isSet = true
}

func (v NullableV1RelaysGet200ResponseWireguard) IsSet() bool {
	return v.isSet
}

func (v *NullableV1RelaysGet200ResponseWireguard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1RelaysGet200ResponseWireguard(val *V1RelaysGet200ResponseWireguard) *NullableV1RelaysGet200ResponseWireguard {
	return &NullableV1RelaysGet200ResponseWireguard{value: val, isSet: true}
}

func (v NullableV1RelaysGet200ResponseWireguard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1RelaysGet200ResponseWireguard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


