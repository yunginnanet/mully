/*
Mullvad App API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mullvad_api

import (
	"encoding/json"
)

// checks if the V1RelaysGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1RelaysGet200Response{}

// V1RelaysGet200Response struct for V1RelaysGet200Response
type V1RelaysGet200Response struct {
	Locations *map[string]Location `json:"locations,omitempty"`
	Openvpn *V1RelaysGet200ResponseOpenvpn `json:"openvpn,omitempty"`
	Wireguard *V1RelaysGet200ResponseWireguard `json:"wireguard,omitempty"`
	Bridge *V1RelaysGet200ResponseBridge `json:"bridge,omitempty"`
}

// NewV1RelaysGet200Response instantiates a new V1RelaysGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1RelaysGet200Response() *V1RelaysGet200Response {
	this := V1RelaysGet200Response{}
	return &this
}

// NewV1RelaysGet200ResponseWithDefaults instantiates a new V1RelaysGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1RelaysGet200ResponseWithDefaults() *V1RelaysGet200Response {
	this := V1RelaysGet200Response{}
	return &this
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *V1RelaysGet200Response) GetLocations() map[string]Location {
	if o == nil || IsNil(o.Locations) {
		var ret map[string]Location
		return ret
	}
	return *o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RelaysGet200Response) GetLocationsOk() (*map[string]Location, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *V1RelaysGet200Response) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given map[string]Location and assigns it to the Locations field.
func (o *V1RelaysGet200Response) SetLocations(v map[string]Location) {
	o.Locations = &v
}

// GetOpenvpn returns the Openvpn field value if set, zero value otherwise.
func (o *V1RelaysGet200Response) GetOpenvpn() V1RelaysGet200ResponseOpenvpn {
	if o == nil || IsNil(o.Openvpn) {
		var ret V1RelaysGet200ResponseOpenvpn
		return ret
	}
	return *o.Openvpn
}

// GetOpenvpnOk returns a tuple with the Openvpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RelaysGet200Response) GetOpenvpnOk() (*V1RelaysGet200ResponseOpenvpn, bool) {
	if o == nil || IsNil(o.Openvpn) {
		return nil, false
	}
	return o.Openvpn, true
}

// HasOpenvpn returns a boolean if a field has been set.
func (o *V1RelaysGet200Response) HasOpenvpn() bool {
	if o != nil && !IsNil(o.Openvpn) {
		return true
	}

	return false
}

// SetOpenvpn gets a reference to the given V1RelaysGet200ResponseOpenvpn and assigns it to the Openvpn field.
func (o *V1RelaysGet200Response) SetOpenvpn(v V1RelaysGet200ResponseOpenvpn) {
	o.Openvpn = &v
}

// GetWireguard returns the Wireguard field value if set, zero value otherwise.
func (o *V1RelaysGet200Response) GetWireguard() V1RelaysGet200ResponseWireguard {
	if o == nil || IsNil(o.Wireguard) {
		var ret V1RelaysGet200ResponseWireguard
		return ret
	}
	return *o.Wireguard
}

// GetWireguardOk returns a tuple with the Wireguard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RelaysGet200Response) GetWireguardOk() (*V1RelaysGet200ResponseWireguard, bool) {
	if o == nil || IsNil(o.Wireguard) {
		return nil, false
	}
	return o.Wireguard, true
}

// HasWireguard returns a boolean if a field has been set.
func (o *V1RelaysGet200Response) HasWireguard() bool {
	if o != nil && !IsNil(o.Wireguard) {
		return true
	}

	return false
}

// SetWireguard gets a reference to the given V1RelaysGet200ResponseWireguard and assigns it to the Wireguard field.
func (o *V1RelaysGet200Response) SetWireguard(v V1RelaysGet200ResponseWireguard) {
	o.Wireguard = &v
}

// GetBridge returns the Bridge field value if set, zero value otherwise.
func (o *V1RelaysGet200Response) GetBridge() V1RelaysGet200ResponseBridge {
	if o == nil || IsNil(o.Bridge) {
		var ret V1RelaysGet200ResponseBridge
		return ret
	}
	return *o.Bridge
}

// GetBridgeOk returns a tuple with the Bridge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RelaysGet200Response) GetBridgeOk() (*V1RelaysGet200ResponseBridge, bool) {
	if o == nil || IsNil(o.Bridge) {
		return nil, false
	}
	return o.Bridge, true
}

// HasBridge returns a boolean if a field has been set.
func (o *V1RelaysGet200Response) HasBridge() bool {
	if o != nil && !IsNil(o.Bridge) {
		return true
	}

	return false
}

// SetBridge gets a reference to the given V1RelaysGet200ResponseBridge and assigns it to the Bridge field.
func (o *V1RelaysGet200Response) SetBridge(v V1RelaysGet200ResponseBridge) {
	o.Bridge = &v
}

func (o V1RelaysGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1RelaysGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	if !IsNil(o.Openvpn) {
		toSerialize["openvpn"] = o.Openvpn
	}
	if !IsNil(o.Wireguard) {
		toSerialize["wireguard"] = o.Wireguard
	}
	if !IsNil(o.Bridge) {
		toSerialize["bridge"] = o.Bridge
	}
	return toSerialize, nil
}

type NullableV1RelaysGet200Response struct {
	value *V1RelaysGet200Response
	isSet bool
}

func (v NullableV1RelaysGet200Response) Get() *V1RelaysGet200Response {
	return v.value
}

func (v *NullableV1RelaysGet200Response) Set(val *V1RelaysGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1RelaysGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1RelaysGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1RelaysGet200Response(val *V1RelaysGet200Response) *NullableV1RelaysGet200Response {
	return &NullableV1RelaysGet200Response{value: val, isSet: true}
}

func (v NullableV1RelaysGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1RelaysGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


