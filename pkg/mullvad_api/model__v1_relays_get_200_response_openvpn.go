/*
Mullvad App API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mullvad_api

import (
	"encoding/json"
)

// checks if the V1RelaysGet200ResponseOpenvpn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1RelaysGet200ResponseOpenvpn{}

// V1RelaysGet200ResponseOpenvpn struct for V1RelaysGet200ResponseOpenvpn
type V1RelaysGet200ResponseOpenvpn struct {
	// Pairs of port/protocol that will accept connections
	Ports []V1RelaysGet200ResponseOpenvpnPortsInner `json:"ports,omitempty"`
	Relays []OpenVpnRelay `json:"relays,omitempty"`
}

// NewV1RelaysGet200ResponseOpenvpn instantiates a new V1RelaysGet200ResponseOpenvpn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1RelaysGet200ResponseOpenvpn() *V1RelaysGet200ResponseOpenvpn {
	this := V1RelaysGet200ResponseOpenvpn{}
	return &this
}

// NewV1RelaysGet200ResponseOpenvpnWithDefaults instantiates a new V1RelaysGet200ResponseOpenvpn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1RelaysGet200ResponseOpenvpnWithDefaults() *V1RelaysGet200ResponseOpenvpn {
	this := V1RelaysGet200ResponseOpenvpn{}
	return &this
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *V1RelaysGet200ResponseOpenvpn) GetPorts() []V1RelaysGet200ResponseOpenvpnPortsInner {
	if o == nil || IsNil(o.Ports) {
		var ret []V1RelaysGet200ResponseOpenvpnPortsInner
		return ret
	}
	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RelaysGet200ResponseOpenvpn) GetPortsOk() ([]V1RelaysGet200ResponseOpenvpnPortsInner, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *V1RelaysGet200ResponseOpenvpn) HasPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []V1RelaysGet200ResponseOpenvpnPortsInner and assigns it to the Ports field.
func (o *V1RelaysGet200ResponseOpenvpn) SetPorts(v []V1RelaysGet200ResponseOpenvpnPortsInner) {
	o.Ports = v
}

// GetRelays returns the Relays field value if set, zero value otherwise.
func (o *V1RelaysGet200ResponseOpenvpn) GetRelays() []OpenVpnRelay {
	if o == nil || IsNil(o.Relays) {
		var ret []OpenVpnRelay
		return ret
	}
	return o.Relays
}

// GetRelaysOk returns a tuple with the Relays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RelaysGet200ResponseOpenvpn) GetRelaysOk() ([]OpenVpnRelay, bool) {
	if o == nil || IsNil(o.Relays) {
		return nil, false
	}
	return o.Relays, true
}

// HasRelays returns a boolean if a field has been set.
func (o *V1RelaysGet200ResponseOpenvpn) HasRelays() bool {
	if o != nil && !IsNil(o.Relays) {
		return true
	}

	return false
}

// SetRelays gets a reference to the given []OpenVpnRelay and assigns it to the Relays field.
func (o *V1RelaysGet200ResponseOpenvpn) SetRelays(v []OpenVpnRelay) {
	o.Relays = v
}

func (o V1RelaysGet200ResponseOpenvpn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1RelaysGet200ResponseOpenvpn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	if !IsNil(o.Relays) {
		toSerialize["relays"] = o.Relays
	}
	return toSerialize, nil
}

type NullableV1RelaysGet200ResponseOpenvpn struct {
	value *V1RelaysGet200ResponseOpenvpn
	isSet bool
}

func (v NullableV1RelaysGet200ResponseOpenvpn) Get() *V1RelaysGet200ResponseOpenvpn {
	return v.value
}

func (v *NullableV1RelaysGet200ResponseOpenvpn) Set(val *V1RelaysGet200ResponseOpenvpn) {
	v.value = val
	v.isSet = true
}

func (v NullableV1RelaysGet200ResponseOpenvpn) IsSet() bool {
	return v.isSet
}

func (v *NullableV1RelaysGet200ResponseOpenvpn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1RelaysGet200ResponseOpenvpn(val *V1RelaysGet200ResponseOpenvpn) *NullableV1RelaysGet200ResponseOpenvpn {
	return &NullableV1RelaysGet200ResponseOpenvpn{value: val, isSet: true}
}

func (v NullableV1RelaysGet200ResponseOpenvpn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1RelaysGet200ResponseOpenvpn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


