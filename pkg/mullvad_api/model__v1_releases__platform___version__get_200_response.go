/*
Mullvad App API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mullvad_api

import (
	"encoding/json"
)

// checks if the V1ReleasesPlatformVersionGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ReleasesPlatformVersionGet200Response{}

// V1ReleasesPlatformVersionGet200Response struct for V1ReleasesPlatformVersionGet200Response
type V1ReleasesPlatformVersionGet200Response struct {
	Supported *bool `json:"supported,omitempty"`
	Latest NullableString `json:"latest,omitempty"`
	LatestStable NullableString `json:"latest_stable,omitempty"`
	LatestBeta NullableString `json:"latest_beta,omitempty"`
}

// NewV1ReleasesPlatformVersionGet200Response instantiates a new V1ReleasesPlatformVersionGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ReleasesPlatformVersionGet200Response() *V1ReleasesPlatformVersionGet200Response {
	this := V1ReleasesPlatformVersionGet200Response{}
	return &this
}

// NewV1ReleasesPlatformVersionGet200ResponseWithDefaults instantiates a new V1ReleasesPlatformVersionGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ReleasesPlatformVersionGet200ResponseWithDefaults() *V1ReleasesPlatformVersionGet200Response {
	this := V1ReleasesPlatformVersionGet200Response{}
	return &this
}

// GetSupported returns the Supported field value if set, zero value otherwise.
func (o *V1ReleasesPlatformVersionGet200Response) GetSupported() bool {
	if o == nil || IsNil(o.Supported) {
		var ret bool
		return ret
	}
	return *o.Supported
}

// GetSupportedOk returns a tuple with the Supported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ReleasesPlatformVersionGet200Response) GetSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.Supported) {
		return nil, false
	}
	return o.Supported, true
}

// HasSupported returns a boolean if a field has been set.
func (o *V1ReleasesPlatformVersionGet200Response) HasSupported() bool {
	if o != nil && !IsNil(o.Supported) {
		return true
	}

	return false
}

// SetSupported gets a reference to the given bool and assigns it to the Supported field.
func (o *V1ReleasesPlatformVersionGet200Response) SetSupported(v bool) {
	o.Supported = &v
}

// GetLatest returns the Latest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1ReleasesPlatformVersionGet200Response) GetLatest() string {
	if o == nil || IsNil(o.Latest.Get()) {
		var ret string
		return ret
	}
	return *o.Latest.Get()
}

// GetLatestOk returns a tuple with the Latest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1ReleasesPlatformVersionGet200Response) GetLatestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Latest.Get(), o.Latest.IsSet()
}

// HasLatest returns a boolean if a field has been set.
func (o *V1ReleasesPlatformVersionGet200Response) HasLatest() bool {
	if o != nil && o.Latest.IsSet() {
		return true
	}

	return false
}

// SetLatest gets a reference to the given NullableString and assigns it to the Latest field.
func (o *V1ReleasesPlatformVersionGet200Response) SetLatest(v string) {
	o.Latest.Set(&v)
}
// SetLatestNil sets the value for Latest to be an explicit nil
func (o *V1ReleasesPlatformVersionGet200Response) SetLatestNil() {
	o.Latest.Set(nil)
}

// UnsetLatest ensures that no value is present for Latest, not even an explicit nil
func (o *V1ReleasesPlatformVersionGet200Response) UnsetLatest() {
	o.Latest.Unset()
}

// GetLatestStable returns the LatestStable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1ReleasesPlatformVersionGet200Response) GetLatestStable() string {
	if o == nil || IsNil(o.LatestStable.Get()) {
		var ret string
		return ret
	}
	return *o.LatestStable.Get()
}

// GetLatestStableOk returns a tuple with the LatestStable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1ReleasesPlatformVersionGet200Response) GetLatestStableOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestStable.Get(), o.LatestStable.IsSet()
}

// HasLatestStable returns a boolean if a field has been set.
func (o *V1ReleasesPlatformVersionGet200Response) HasLatestStable() bool {
	if o != nil && o.LatestStable.IsSet() {
		return true
	}

	return false
}

// SetLatestStable gets a reference to the given NullableString and assigns it to the LatestStable field.
func (o *V1ReleasesPlatformVersionGet200Response) SetLatestStable(v string) {
	o.LatestStable.Set(&v)
}
// SetLatestStableNil sets the value for LatestStable to be an explicit nil
func (o *V1ReleasesPlatformVersionGet200Response) SetLatestStableNil() {
	o.LatestStable.Set(nil)
}

// UnsetLatestStable ensures that no value is present for LatestStable, not even an explicit nil
func (o *V1ReleasesPlatformVersionGet200Response) UnsetLatestStable() {
	o.LatestStable.Unset()
}

// GetLatestBeta returns the LatestBeta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1ReleasesPlatformVersionGet200Response) GetLatestBeta() string {
	if o == nil || IsNil(o.LatestBeta.Get()) {
		var ret string
		return ret
	}
	return *o.LatestBeta.Get()
}

// GetLatestBetaOk returns a tuple with the LatestBeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1ReleasesPlatformVersionGet200Response) GetLatestBetaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestBeta.Get(), o.LatestBeta.IsSet()
}

// HasLatestBeta returns a boolean if a field has been set.
func (o *V1ReleasesPlatformVersionGet200Response) HasLatestBeta() bool {
	if o != nil && o.LatestBeta.IsSet() {
		return true
	}

	return false
}

// SetLatestBeta gets a reference to the given NullableString and assigns it to the LatestBeta field.
func (o *V1ReleasesPlatformVersionGet200Response) SetLatestBeta(v string) {
	o.LatestBeta.Set(&v)
}
// SetLatestBetaNil sets the value for LatestBeta to be an explicit nil
func (o *V1ReleasesPlatformVersionGet200Response) SetLatestBetaNil() {
	o.LatestBeta.Set(nil)
}

// UnsetLatestBeta ensures that no value is present for LatestBeta, not even an explicit nil
func (o *V1ReleasesPlatformVersionGet200Response) UnsetLatestBeta() {
	o.LatestBeta.Unset()
}

func (o V1ReleasesPlatformVersionGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ReleasesPlatformVersionGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Supported) {
		toSerialize["supported"] = o.Supported
	}
	if o.Latest.IsSet() {
		toSerialize["latest"] = o.Latest.Get()
	}
	if o.LatestStable.IsSet() {
		toSerialize["latest_stable"] = o.LatestStable.Get()
	}
	if o.LatestBeta.IsSet() {
		toSerialize["latest_beta"] = o.LatestBeta.Get()
	}
	return toSerialize, nil
}

type NullableV1ReleasesPlatformVersionGet200Response struct {
	value *V1ReleasesPlatformVersionGet200Response
	isSet bool
}

func (v NullableV1ReleasesPlatformVersionGet200Response) Get() *V1ReleasesPlatformVersionGet200Response {
	return v.value
}

func (v *NullableV1ReleasesPlatformVersionGet200Response) Set(val *V1ReleasesPlatformVersionGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ReleasesPlatformVersionGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ReleasesPlatformVersionGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ReleasesPlatformVersionGet200Response(val *V1ReleasesPlatformVersionGet200Response) *NullableV1ReleasesPlatformVersionGet200Response {
	return &NullableV1ReleasesPlatformVersionGet200Response{value: val, isSet: true}
}

func (v NullableV1ReleasesPlatformVersionGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ReleasesPlatformVersionGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


