/*
Mullvad App API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mullvad_api

import (
	"encoding/json"
)

// checks if the V1SubmitVoucherPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SubmitVoucherPost200Response{}

// V1SubmitVoucherPost200Response struct for V1SubmitVoucherPost200Response
type V1SubmitVoucherPost200Response struct {
	TimeAdded *float32 `json:"time_added,omitempty"`
	NewExpiry *string `json:"new_expiry,omitempty"`
}

// NewV1SubmitVoucherPost200Response instantiates a new V1SubmitVoucherPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SubmitVoucherPost200Response() *V1SubmitVoucherPost200Response {
	this := V1SubmitVoucherPost200Response{}
	return &this
}

// NewV1SubmitVoucherPost200ResponseWithDefaults instantiates a new V1SubmitVoucherPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SubmitVoucherPost200ResponseWithDefaults() *V1SubmitVoucherPost200Response {
	this := V1SubmitVoucherPost200Response{}
	return &this
}

// GetTimeAdded returns the TimeAdded field value if set, zero value otherwise.
func (o *V1SubmitVoucherPost200Response) GetTimeAdded() float32 {
	if o == nil || IsNil(o.TimeAdded) {
		var ret float32
		return ret
	}
	return *o.TimeAdded
}

// GetTimeAddedOk returns a tuple with the TimeAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SubmitVoucherPost200Response) GetTimeAddedOk() (*float32, bool) {
	if o == nil || IsNil(o.TimeAdded) {
		return nil, false
	}
	return o.TimeAdded, true
}

// HasTimeAdded returns a boolean if a field has been set.
func (o *V1SubmitVoucherPost200Response) HasTimeAdded() bool {
	if o != nil && !IsNil(o.TimeAdded) {
		return true
	}

	return false
}

// SetTimeAdded gets a reference to the given float32 and assigns it to the TimeAdded field.
func (o *V1SubmitVoucherPost200Response) SetTimeAdded(v float32) {
	o.TimeAdded = &v
}

// GetNewExpiry returns the NewExpiry field value if set, zero value otherwise.
func (o *V1SubmitVoucherPost200Response) GetNewExpiry() string {
	if o == nil || IsNil(o.NewExpiry) {
		var ret string
		return ret
	}
	return *o.NewExpiry
}

// GetNewExpiryOk returns a tuple with the NewExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SubmitVoucherPost200Response) GetNewExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.NewExpiry) {
		return nil, false
	}
	return o.NewExpiry, true
}

// HasNewExpiry returns a boolean if a field has been set.
func (o *V1SubmitVoucherPost200Response) HasNewExpiry() bool {
	if o != nil && !IsNil(o.NewExpiry) {
		return true
	}

	return false
}

// SetNewExpiry gets a reference to the given string and assigns it to the NewExpiry field.
func (o *V1SubmitVoucherPost200Response) SetNewExpiry(v string) {
	o.NewExpiry = &v
}

func (o V1SubmitVoucherPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SubmitVoucherPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimeAdded) {
		toSerialize["time_added"] = o.TimeAdded
	}
	if !IsNil(o.NewExpiry) {
		toSerialize["new_expiry"] = o.NewExpiry
	}
	return toSerialize, nil
}

type NullableV1SubmitVoucherPost200Response struct {
	value *V1SubmitVoucherPost200Response
	isSet bool
}

func (v NullableV1SubmitVoucherPost200Response) Get() *V1SubmitVoucherPost200Response {
	return v.value
}

func (v *NullableV1SubmitVoucherPost200Response) Set(val *V1SubmitVoucherPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SubmitVoucherPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SubmitVoucherPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SubmitVoucherPost200Response(val *V1SubmitVoucherPost200Response) *NullableV1SubmitVoucherPost200Response {
	return &NullableV1SubmitVoucherPost200Response{value: val, isSet: true}
}

func (v NullableV1SubmitVoucherPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SubmitVoucherPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


