/*
Mullvad App API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mullvad_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1ReplaceWireguardKeyPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ReplaceWireguardKeyPostRequest{}

// V1ReplaceWireguardKeyPostRequest struct for V1ReplaceWireguardKeyPostRequest
type V1ReplaceWireguardKeyPostRequest struct {
	// The WireGuard public key to remove
	Old string `json:"old"`
	// The WireGuard public key to add
	New string `json:"new"`
}

type _V1ReplaceWireguardKeyPostRequest V1ReplaceWireguardKeyPostRequest

// NewV1ReplaceWireguardKeyPostRequest instantiates a new V1ReplaceWireguardKeyPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ReplaceWireguardKeyPostRequest(old string, new string) *V1ReplaceWireguardKeyPostRequest {
	this := V1ReplaceWireguardKeyPostRequest{}
	this.Old = old
	this.New = new
	return &this
}

// NewV1ReplaceWireguardKeyPostRequestWithDefaults instantiates a new V1ReplaceWireguardKeyPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ReplaceWireguardKeyPostRequestWithDefaults() *V1ReplaceWireguardKeyPostRequest {
	this := V1ReplaceWireguardKeyPostRequest{}
	return &this
}

// GetOld returns the Old field value
func (o *V1ReplaceWireguardKeyPostRequest) GetOld() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Old
}

// GetOldOk returns a tuple with the Old field value
// and a boolean to check if the value has been set.
func (o *V1ReplaceWireguardKeyPostRequest) GetOldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Old, true
}

// SetOld sets field value
func (o *V1ReplaceWireguardKeyPostRequest) SetOld(v string) {
	o.Old = v
}

// GetNew returns the New field value
func (o *V1ReplaceWireguardKeyPostRequest) GetNew() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.New
}

// GetNewOk returns a tuple with the New field value
// and a boolean to check if the value has been set.
func (o *V1ReplaceWireguardKeyPostRequest) GetNewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.New, true
}

// SetNew sets field value
func (o *V1ReplaceWireguardKeyPostRequest) SetNew(v string) {
	o.New = v
}

func (o V1ReplaceWireguardKeyPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ReplaceWireguardKeyPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["old"] = o.Old
	toSerialize["new"] = o.New
	return toSerialize, nil
}

func (o *V1ReplaceWireguardKeyPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"old",
		"new",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1ReplaceWireguardKeyPostRequest := _V1ReplaceWireguardKeyPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1ReplaceWireguardKeyPostRequest)

	if err != nil {
		return err
	}

	*o = V1ReplaceWireguardKeyPostRequest(varV1ReplaceWireguardKeyPostRequest)

	return err
}

type NullableV1ReplaceWireguardKeyPostRequest struct {
	value *V1ReplaceWireguardKeyPostRequest
	isSet bool
}

func (v NullableV1ReplaceWireguardKeyPostRequest) Get() *V1ReplaceWireguardKeyPostRequest {
	return v.value
}

func (v *NullableV1ReplaceWireguardKeyPostRequest) Set(val *V1ReplaceWireguardKeyPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ReplaceWireguardKeyPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ReplaceWireguardKeyPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ReplaceWireguardKeyPostRequest(val *V1ReplaceWireguardKeyPostRequest) *NullableV1ReplaceWireguardKeyPostRequest {
	return &NullableV1ReplaceWireguardKeyPostRequest{value: val, isSet: true}
}

func (v NullableV1ReplaceWireguardKeyPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ReplaceWireguardKeyPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


